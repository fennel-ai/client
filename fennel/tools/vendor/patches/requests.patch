diff --git a/fennel/_vendor/requests/packages.py b/fennel/_vendor/requests/packages.py
index 77c45c9..119da91 100644
--- a/fennel/_vendor/requests/packages.py
+++ b/fennel/_vendor/requests/packages.py
@@ -1,28 +1,11 @@
 import sys
 
-try:
-    import chardet
-except ImportError:
-    import warnings
-
-    import charset_normalizer as chardet
-
-    warnings.filterwarnings("ignore", "Trying to detect", module="charset_normalizer")
-
-# This code exists for backwards compatibility reasons.
-# I don't like it either. Just look the other way. :)
-
-for package in ("urllib3", "idna"):
-    locals()[package] = __import__(package)
+for package in ("urllib3", "idna", "chardet"):
+    vendored_package = f"fennel._vendor.{package}"
+    locals()[package] = __import__(vendored_package)
     # This traversal is apparently necessary such that the identities are
     # preserved (requests.packages.urllib3.* is urllib3.*)
     for mod in list(sys.modules):
-        if mod == package or mod.startswith(f"{package}."):
-            sys.modules[f"requests.packages.{mod}"] = sys.modules[mod]
-
-target = chardet.__name__
-for mod in list(sys.modules):
-    if mod == target or mod.startswith(f"{target}."):
-        target = target.replace(target, "chardet")
-        sys.modules[f"requests.packages.{target}"] = sys.modules[mod]
-# Kinda cool, though, right?
+        if mod == vendored_package or mod.startswith(f"{vendored_package}."):
+            unprefixed_mod = mod[len("fennel._vendor."):]
+            sys.modules[f"fennel._vendor.requests.packages.{unprefixed_mod}"] = sys.modules[mod]
