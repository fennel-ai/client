diff --git a/fennel/_vendor/certifi/core.py b/fennel/_vendor/certifi/core.py
index de02898..c186b55 100644
--- a/fennel/_vendor/certifi/core.py
+++ b/fennel/_vendor/certifi/core.py
@@ -33,13 +33,13 @@ if sys.version_info >= (3, 11):
             # We also have to hold onto the actual context manager, because
             # it will do the cleanup whenever it gets garbage collected, so
             # we will also store that at the global level as well.
-            _CACERT_CTX = as_file(files("certifi").joinpath("cacert.pem"))
+            _CACERT_CTX = as_file(files("fennel._vendor.certifi").joinpath("cacert.pem"))
             _CACERT_PATH = str(_CACERT_CTX.__enter__())
 
         return _CACERT_PATH
 
     def contents() -> str:
-        return files("certifi").joinpath("cacert.pem").read_text(encoding="ascii")
+        return files("fennel._vendor.certifi").joinpath("cacert.pem").read_text(encoding="ascii")
 
 elif sys.version_info >= (3, 7):
 
@@ -68,13 +68,13 @@ elif sys.version_info >= (3, 7):
             # We also have to hold onto the actual context manager, because
             # it will do the cleanup whenever it gets garbage collected, so
             # we will also store that at the global level as well.
-            _CACERT_CTX = get_path("certifi", "cacert.pem")
+            _CACERT_CTX = get_path("fennel._vendor.certifi", "cacert.pem")
             _CACERT_PATH = str(_CACERT_CTX.__enter__())
 
         return _CACERT_PATH
 
     def contents() -> str:
-        return read_text("certifi", "cacert.pem", encoding="ascii")
+        return read_text("fennel._vendor.certifi", "cacert.pem", encoding="ascii")
 
 else:
     import os
@@ -105,4 +105,4 @@ else:
         return os.path.join(f, "cacert.pem")
 
     def contents() -> str:
-        return read_text("certifi", "cacert.pem", encoding="ascii")
+        return read_text("fennel._vendor.certifi", "cacert.pem", encoding="ascii")
