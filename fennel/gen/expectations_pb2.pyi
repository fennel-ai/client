"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import metadata_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Expectations(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _EntityType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _EntityTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Expectations._EntityType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Dataset: Expectations._EntityType.ValueType  # 0
        Featureset: Expectations._EntityType.ValueType  # 1
        Pipeline: Expectations._EntityType.ValueType  # 2

    class EntityType(_EntityType, metaclass=_EntityTypeEnumTypeWrapper): ...
    Dataset: Expectations.EntityType.ValueType  # 0
    Featureset: Expectations.EntityType.ValueType  # 1
    Pipeline: Expectations.EntityType.ValueType  # 2

    ENTITY_NAME_FIELD_NUMBER: builtins.int
    SUITE_FIELD_NUMBER: builtins.int
    EXPECTATIONS_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    E_TYPE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    entity_name: builtins.str
    suite: builtins.str
    @property
    def expectations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Expectation]: ...
    version: builtins.int
    @property
    def metadata(self) -> metadata_pb2.Metadata: ...
    e_type: global___Expectations.EntityType.ValueType
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        entity_name: builtins.str = ...,
        suite: builtins.str = ...,
        expectations: collections.abc.Iterable[global___Expectation] | None = ...,
        version: builtins.int = ...,
        metadata: metadata_pb2.Metadata | None = ...,
        e_type: global___Expectations.EntityType.ValueType = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["e_type", b"e_type", "entity_name", b"entity_name", "expectations", b"expectations", "metadata", b"metadata", "suite", b"suite", "tags", b"tags", "version", b"version"]) -> None: ...

global___Expectations = Expectations

@typing_extensions.final
class Expectation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXPECTATION_TYPE_FIELD_NUMBER: builtins.int
    EXPECTATION_KWARGS_FIELD_NUMBER: builtins.int
    expectation_type: builtins.str
    expectation_kwargs: builtins.str
    """This is a JSON string that contains the arguments for the expectation."""
    def __init__(
        self,
        *,
        expectation_type: builtins.str = ...,
        expectation_kwargs: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expectation_kwargs", b"expectation_kwargs", "expectation_type", b"expectation_type"]) -> None: ...

global___Expectation = Expectation
