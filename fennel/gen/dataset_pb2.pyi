"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import metadata_pb2
import schema_pb2
import source_pb2
import status_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FieldType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FieldTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FieldType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Key: _FieldType.ValueType  # 0
    Val: _FieldType.ValueType  # 1
    Timestamp: _FieldType.ValueType  # 2

class FieldType(_FieldType, metaclass=_FieldTypeEnumTypeWrapper):
    """All integers representing time are in microseconds and hence should be int64."""

Key: FieldType.ValueType  # 0
Val: FieldType.ValueType  # 1
Timestamp: FieldType.ValueType  # 2
global___FieldType = FieldType

class _AggregateType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AggregateTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AggregateType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SUM: _AggregateType.ValueType  # 0
    AVG: _AggregateType.ValueType  # 1
    COUNT: _AggregateType.ValueType  # 2
    MIN: _AggregateType.ValueType  # 3
    MAX: _AggregateType.ValueType  # 4
    TOPK: _AggregateType.ValueType  # 5
    CF: _AggregateType.ValueType  # 6

class AggregateType(_AggregateType, metaclass=_AggregateTypeEnumTypeWrapper): ...

SUM: AggregateType.ValueType  # 0
AVG: AggregateType.ValueType  # 1
COUNT: AggregateType.ValueType  # 2
MIN: AggregateType.ValueType  # 3
MAX: AggregateType.ValueType  # 4
TOPK: AggregateType.ValueType  # 5
CF: AggregateType.ValueType  # 6
global___AggregateType = AggregateType

@typing_extensions.final
class Field(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    FTYPE_FIELD_NUMBER: builtins.int
    DTYPE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    name: builtins.str
    ftype: global___FieldType.ValueType
    @property
    def dtype(self) -> schema_pb2.DataType: ...
    @property
    def metadata(self) -> metadata_pb2.Metadata: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        ftype: global___FieldType.ValueType = ...,
        dtype: schema_pb2.DataType | None = ...,
        metadata: metadata_pb2.Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dtype", b"dtype", "metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dtype", b"dtype", "ftype", b"ftype", "metadata", b"metadata", "name", b"name"]) -> None: ...

global___Field = Field

@typing_extensions.final
class OnDemand(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FUNCTION_SOURCE_CODE_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    EXPIRES_AFTER_FIELD_NUMBER: builtins.int
    function_source_code: builtins.str
    function: builtins.bytes
    expires_after: builtins.int
    def __init__(
        self,
        *,
        function_source_code: builtins.str = ...,
        function: builtins.bytes = ...,
        expires_after: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["expires_after", b"expires_after", "function", b"function", "function_source_code", b"function_source_code"]) -> None: ...

global___OnDemand = OnDemand

@typing_extensions.final
class CreateDatasetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    PIPELINES_FIELD_NUMBER: builtins.int
    INPUT_CONNECTORS_FIELD_NUMBER: builtins.int
    OUTPUT_CONNECTORS_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    HISTORY_FIELD_NUMBER: builtins.int
    MAX_STALENESS_FIELD_NUMBER: builtins.int
    ON_DEMAND_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def fields(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Field]: ...
    @property
    def pipelines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Pipeline]: ...
    @property
    def input_connectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[source_pb2.DataConnector]: ...
    @property
    def output_connectors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[source_pb2.DataConnector]: ...
    signature: builtins.str
    @property
    def metadata(self) -> metadata_pb2.Metadata: ...
    mode: builtins.str
    """Default mode is pandas."""
    version: builtins.int
    history: builtins.int
    max_staleness: builtins.int
    @property
    def on_demand(self) -> global___OnDemand: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        fields: collections.abc.Iterable[global___Field] | None = ...,
        pipelines: collections.abc.Iterable[global___Pipeline] | None = ...,
        input_connectors: collections.abc.Iterable[source_pb2.DataConnector] | None = ...,
        output_connectors: collections.abc.Iterable[source_pb2.DataConnector] | None = ...,
        signature: builtins.str = ...,
        metadata: metadata_pb2.Metadata | None = ...,
        mode: builtins.str = ...,
        version: builtins.int = ...,
        history: builtins.int = ...,
        max_staleness: builtins.int = ...,
        on_demand: global___OnDemand | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata", "on_demand", b"on_demand"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fields", b"fields", "history", b"history", "input_connectors", b"input_connectors", "max_staleness", b"max_staleness", "metadata", b"metadata", "mode", b"mode", "name", b"name", "on_demand", b"on_demand", "output_connectors", b"output_connectors", "pipelines", b"pipelines", "signature", b"signature", "version", b"version"]) -> None: ...

global___CreateDatasetRequest = CreateDatasetRequest

@typing_extensions.final
class CreateDatasetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def status(self) -> status_pb2.Status: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        status: status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "status", b"status"]) -> None: ...

global___CreateDatasetResponse = CreateDatasetResponse

@typing_extensions.final
class Pipeline(google.protobuf.message.Message):
    """----------------------------------------------------------------------------------------------
    Pipeline
    ----------------------------------------------------------------------------------------------
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NODES_FIELD_NUMBER: builtins.int
    ROOT_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Node]:
        """Nodes in the pipeline."""
    root: builtins.str
    """Id of the root node."""
    signature: builtins.str
    @property
    def metadata(self) -> metadata_pb2.Metadata: ...
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of input datasets."""
    name: builtins.str
    def __init__(
        self,
        *,
        nodes: collections.abc.Iterable[global___Node] | None = ...,
        root: builtins.str = ...,
        signature: builtins.str = ...,
        metadata: metadata_pb2.Metadata | None = ...,
        inputs: collections.abc.Iterable[builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inputs", b"inputs", "metadata", b"metadata", "name", b"name", "nodes", b"nodes", "root", b"root", "signature", b"signature"]) -> None: ...

global___Pipeline = Pipeline

@typing_extensions.final
class Node(google.protobuf.message.Message):
    """Each Node in the pipeline either refers to an operator.
    Each node also has a globally unique id. Operators refer to their inputs via
    their corresponding node ids.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    DATASET_FIELD_NUMBER: builtins.int
    id: builtins.str
    """For a dataset node, this is the name of the dataset"""
    @property
    def operator(self) -> global___Operator: ...
    dataset: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        operator: global___Operator | None = ...,
        dataset: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "node_type", b"node_type", "operator", b"operator"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset", b"dataset", "id", b"id", "node_type", b"node_type", "operator", b"operator"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["node_type", b"node_type"]) -> typing_extensions.Literal["operator", "dataset"] | None: ...

global___Node = Node

@typing_extensions.final
class Operator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AGGREGATE_FIELD_NUMBER: builtins.int
    JOIN_FIELD_NUMBER: builtins.int
    TRANSFORM_FIELD_NUMBER: builtins.int
    UNION_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    @property
    def aggregate(self) -> global___Aggregate: ...
    @property
    def join(self) -> global___Join: ...
    @property
    def transform(self) -> global___Transform: ...
    @property
    def union(self) -> global___Union: ...
    @property
    def filter(self) -> global___Filter: ...
    def __init__(
        self,
        *,
        aggregate: global___Aggregate | None = ...,
        join: global___Join | None = ...,
        transform: global___Transform | None = ...,
        union: global___Union | None = ...,
        filter: global___Filter | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["aggregate", b"aggregate", "filter", b"filter", "join", b"join", "op", b"op", "transform", b"transform", "union", b"union"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregate", b"aggregate", "filter", b"filter", "join", b"join", "op", b"op", "transform", b"transform", "union", b"union"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["op", b"op"]) -> typing_extensions.Literal["aggregate", "join", "transform", "union", "filter"] | None: ...

global___Operator = Operator

@typing_extensions.final
class Aggregate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERAND_NODE_ID_FIELD_NUMBER: builtins.int
    KEYS_FIELD_NUMBER: builtins.int
    AGGREGATES_FIELD_NUMBER: builtins.int
    operand_node_id: builtins.str
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def aggregates(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Aggregation]: ...
    def __init__(
        self,
        *,
        operand_node_id: builtins.str = ...,
        keys: collections.abc.Iterable[builtins.str] | None = ...,
        aggregates: collections.abc.Iterable[global___Aggregation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["aggregates", b"aggregates", "keys", b"keys", "operand_node_id", b"operand_node_id"]) -> None: ...

global___Aggregate = Aggregate

@typing_extensions.final
class Join(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class OnEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    LHS_NODE_ID_FIELD_NUMBER: builtins.int
    RHS_DATASET_NAME_FIELD_NUMBER: builtins.int
    ON_FIELD_NUMBER: builtins.int
    lhs_node_id: builtins.str
    rhs_dataset_name: builtins.str
    """RHS of a JOIN can only be a dataset."""
    @property
    def on(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Map of left field name to right field name to join on."""
    def __init__(
        self,
        *,
        lhs_node_id: builtins.str = ...,
        rhs_dataset_name: builtins.str = ...,
        on: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lhs_node_id", b"lhs_node_id", "on", b"on", "rhs_dataset_name", b"rhs_dataset_name"]) -> None: ...

global___Join = Join

@typing_extensions.final
class Transform(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SchemaEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> schema_pb2.DataType: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: schema_pb2.DataType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    OPERAND_NODE_ID_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    FUNCTION_SOURCE_CODE_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    operand_node_id: builtins.str
    function: builtins.bytes
    function_source_code: builtins.str
    @property
    def schema(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, schema_pb2.DataType]: ...
    def __init__(
        self,
        *,
        operand_node_id: builtins.str = ...,
        function: builtins.bytes = ...,
        function_source_code: builtins.str = ...,
        schema: collections.abc.Mapping[builtins.str, schema_pb2.DataType] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["function", b"function", "function_source_code", b"function_source_code", "operand_node_id", b"operand_node_id", "schema", b"schema"]) -> None: ...

global___Transform = Transform

@typing_extensions.final
class Filter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERAND_NODE_ID_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    FUNCTION_SOURCE_CODE_FIELD_NUMBER: builtins.int
    operand_node_id: builtins.str
    function: builtins.bytes
    function_source_code: builtins.str
    def __init__(
        self,
        *,
        operand_node_id: builtins.str = ...,
        function: builtins.bytes = ...,
        function_source_code: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["function", b"function", "function_source_code", b"function_source_code", "operand_node_id", b"operand_node_id"]) -> None: ...

global___Filter = Filter

@typing_extensions.final
class Union(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OPERAND_NODE_IDS_FIELD_NUMBER: builtins.int
    @property
    def operand_node_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        operand_node_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["operand_node_ids", b"operand_node_ids"]) -> None: ...

global___Union = Union

@typing_extensions.final
class Aggregation(google.protobuf.message.Message):
    """----------------------------------------------------------------------------
    Aggregate Definitions
    ----------------------------------------------------------------------------
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AGG_TYPE_FIELD_NUMBER: builtins.int
    WINDOW_SPEC_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_FIELD_NUMBER: builtins.int
    TOPK_FIELD_NUMBER: builtins.int
    CF_FIELD_NUMBER: builtins.int
    agg_type: global___AggregateType.ValueType
    @property
    def window_spec(self) -> global___WindowSpec: ...
    field: builtins.str
    value_field: builtins.str
    @property
    def topk(self) -> global___TopKConfig: ...
    @property
    def cf(self) -> global___CFConfig: ...
    def __init__(
        self,
        *,
        agg_type: global___AggregateType.ValueType = ...,
        window_spec: global___WindowSpec | None = ...,
        field: builtins.str = ...,
        value_field: builtins.str = ...,
        topk: global___TopKConfig | None = ...,
        cf: global___CFConfig | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cf", b"cf", "config", b"config", "topk", b"topk", "value_field", b"value_field", "window_spec", b"window_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["agg_type", b"agg_type", "cf", b"cf", "config", b"config", "field", b"field", "topk", b"topk", "value_field", b"value_field", "window_spec", b"window_spec"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["config", b"config"]) -> typing_extensions.Literal["value_field", "topk", "cf"] | None: ...

global___Aggregation = Aggregation

@typing_extensions.final
class Window(google.protobuf.message.Message):
    """to = 0 represents last X window."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    start: builtins.int
    end: builtins.int
    def __init__(
        self,
        *,
        start: builtins.int = ...,
        end: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> None: ...

global___Window = Window

@typing_extensions.final
class DeltaWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASELINE_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    @property
    def baseline(self) -> global___Window: ...
    @property
    def target(self) -> global___Window: ...
    def __init__(
        self,
        *,
        baseline: global___Window | None = ...,
        target: global___Window | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseline", b"baseline", "target", b"target"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseline", b"baseline", "target", b"target"]) -> None: ...

global___DeltaWindow = DeltaWindow

@typing_extensions.final
class WindowSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FOREVER_WINDOW_FIELD_NUMBER: builtins.int
    WINDOW_FIELD_NUMBER: builtins.int
    DELTA_WINDOW_FIELD_NUMBER: builtins.int
    forever_window: builtins.bool
    @property
    def window(self) -> global___Window: ...
    @property
    def delta_window(self) -> global___DeltaWindow: ...
    def __init__(
        self,
        *,
        forever_window: builtins.bool = ...,
        window: global___Window | None = ...,
        delta_window: global___DeltaWindow | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delta_window", b"delta_window", "forever_window", b"forever_window", "spec", b"spec", "window", b"window"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delta_window", b"delta_window", "forever_window", b"forever_window", "spec", b"spec", "window", b"window"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["spec", b"spec"]) -> typing_extensions.Literal["forever_window", "window", "delta_window"] | None: ...

global___WindowSpec = WindowSpec

@typing_extensions.final
class TopKConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    K_FIELD_NUMBER: builtins.int
    ITEM_FIELDS_FIELD_NUMBER: builtins.int
    SCORE_FIELD_FIELD_NUMBER: builtins.int
    k: builtins.int
    @property
    def item_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    score_field: builtins.str
    def __init__(
        self,
        *,
        k: builtins.int = ...,
        item_fields: collections.abc.Iterable[builtins.str] | None = ...,
        score_field: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item_fields", b"item_fields", "k", b"k", "score_field", b"score_field"]) -> None: ...

global___TopKConfig = TopKConfig

@typing_extensions.final
class CFConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIMIT_FIELD_NUMBER: builtins.int
    CONTEXT_FIELDS_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_FIELD_NUMBER: builtins.int
    limit: builtins.int
    @property
    def context_fields(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    weight_field: builtins.str
    def __init__(
        self,
        *,
        limit: builtins.int = ...,
        context_fields: collections.abc.Iterable[builtins.str] | None = ...,
        weight_field: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["context_fields", b"context_fields", "limit", b"limit", "weight_field", b"weight_field"]) -> None: ...

global___CFConfig = CFConfig
