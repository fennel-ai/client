"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import http_auth_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _RegistryProvider:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _RegistryProviderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_RegistryProvider.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CONFLUENT: _RegistryProvider.ValueType  # 0

class RegistryProvider(_RegistryProvider, metaclass=_RegistryProviderEnumTypeWrapper): ...

CONFLUENT: RegistryProvider.ValueType  # 0
global___RegistryProvider = RegistryProvider

@typing_extensions.final
class SchemaRegistry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGISTRY_PROVIDER_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    AUTH_FIELD_NUMBER: builtins.int
    registry_provider: global___RegistryProvider.ValueType
    url: builtins.str
    @property
    def auth(self) -> http_auth_pb2.HTTPAuthentication: ...
    def __init__(
        self,
        *,
        registry_provider: global___RegistryProvider.ValueType = ...,
        url: builtins.str = ...,
        auth: http_auth_pb2.HTTPAuthentication | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth", b"auth"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth", b"auth", "registry_provider", b"registry_provider", "url", b"url"]) -> None: ...

global___SchemaRegistry = SchemaRegistry
