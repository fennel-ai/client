syntax = "proto3";

package fennel.proto;

import "status.proto";

// All integers representing time are in microseconds and hence should be int64.

message DatasetField {
  string name = 1;
  bytes schema = 2;
  bool is_key = 3;
  bool is_timestamp = 4;
  string owner = 5;
  string description = 6;
  bool is_nullable = 7;

  // Only for aggregated datasets.
  Aggregation aggregation = 8;
}

message PullLookup {
  string function_source_code = 1;
  bytes function = 2;
  repeated string depends_on_datasets = 3;
}

message CreateDatasetRequest {
  string name = 1;
  repeated DatasetField fields = 2;
  // Serialized arrow schema.
  bytes schema = 3;
  int64 retention = 4;
  int64 max_staleness = 5;
  // Default mode is pandas.
  string mode = 6;
  string description = 7;
  uint32 version = 8;

  PullLookup pull_lookup = 9;

  // Fields 10 - 12 are for aggregated datasets.
  bool is_aggregated = 10;
  string base_dataset = 11;
}

message CreateDatasetResponse{
  string dataset_name = 1;
  Status status = 2;
}

// ----------------------------------------------------------------------------
// Aggregate Definitions
// ----------------------------------------------------------------------------

message Aggregation {
  AggregateType type = 1;
  WindowSpec window_spec = 2;
  oneof config {
    string value_field = 3;
    TopKConfig topk = 4;
    CFConfig cf = 5;
  }
}

enum AggregateType {
  SUM = 0;
  AVG = 1;
  COUNT = 2;
  MIN = 3;
  MAX = 4;
  TOPK = 5;
  CF = 6;
}

// to = 0 represents last X window.
message Window {
  int64 start = 1;
  int64 end = 2;
}

message DeltaWindow {
  Window baseline = 1;
  Window target = 2;
}

message WindowSpec {
  oneof spec {
    bool forever_window = 1;
    Window window = 2;
    DeltaWindow delta_window = 3;
  }
}

message TopKConfig {
  int32 k = 1;
  repeated string item_fields = 2;
  string score_field = 3;
}

message CFConfig {
  int32 limit = 1;
  repeated string context_fields = 2;
  string weight_field = 3;
}